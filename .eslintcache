[{"C:\\laragon\\www\\react\\fullstackblog\\src\\index.js":"1","C:\\laragon\\www\\react\\fullstackblog\\src\\App.js":"2","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\Navigation.js":"3","C:\\laragon\\www\\react\\fullstackblog\\src\\redux\\Store.js":"4","C:\\laragon\\www\\react\\fullstackblog\\src\\redux\\reducers\\PageLogics.js":"5","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\PostPreviewCard.js":"6","C:\\laragon\\www\\react\\fullstackblog\\src\\redux\\actions\\PostActions.js":"7","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\ThemeSwitch.js":"8","C:\\laragon\\www\\react\\fullstackblog\\src\\redux\\reducers\\PostsReducer.js":"9","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\Posts.js":"10","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\Blog.js":"11","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\Portfolio.js":"12","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\Post.js":"13","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\PostCard.js":"14","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\Comments.js":"15","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\Comment.js":"16","C:\\laragon\\www\\react\\fullstackblog\\src\\redux\\reducers\\TemporaryBlogPosts.js":"17"},{"size":729,"mtime":1609150525504,"results":"18","hashOfConfig":"19"},{"size":1118,"mtime":1609616102846,"results":"20","hashOfConfig":"19"},{"size":1506,"mtime":1609609208473,"results":"21","hashOfConfig":"19"},{"size":503,"mtime":1609132542844,"results":"22","hashOfConfig":"19"},{"size":456,"mtime":1609238121897,"results":"23","hashOfConfig":"19"},{"size":2042,"mtime":1609189259833,"results":"24","hashOfConfig":"19"},{"size":675,"mtime":1609493947448,"results":"25","hashOfConfig":"19"},{"size":781,"mtime":1609419855268,"results":"26","hashOfConfig":"19"},{"size":943,"mtime":1609704502225,"results":"27","hashOfConfig":"19"},{"size":334,"mtime":1609616312137,"results":"28","hashOfConfig":"19"},{"size":1007,"mtime":1609612419887,"results":"29","hashOfConfig":"19"},{"size":7144,"mtime":1609879758344,"results":"30","hashOfConfig":"19"},{"size":1345,"mtime":1609616746133,"results":"31","hashOfConfig":"19"},{"size":2923,"mtime":1609965243204,"results":"32","hashOfConfig":"19"},{"size":873,"mtime":1609493570963,"results":"33","hashOfConfig":"19"},{"size":396,"mtime":1609493570993,"results":"34","hashOfConfig":"19"},{"size":9551,"mtime":1610953417586,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1mtl1cd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\laragon\\www\\react\\fullstackblog\\src\\index.js",[],["77","78"],"C:\\laragon\\www\\react\\fullstackblog\\src\\App.js",[],"C:\\laragon\\www\\react\\fullstackblog\\src\\components\\Navigation.js",["79"],"import React,{useEffect} from 'react';\r\nimport '../Styles/Navigation.css';\r\nimport ThemeSwitch from './ThemeSwitch';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Navigation = (props) =>{\r\n\r\n    let history = useHistory();\r\n    let menu = history.location.pathname === '/' || history.location.pathname === '/portfolio' ? 'Blog' : 'Profile'\r\n\r\n    const style = `nav-menu ${props.mode}`;\r\n\r\n    let NavMenu;\r\n    switch (props.menu) {\r\n        case \"portfolio\": NavMenu =<NavLink to={'/blog'} onClick={()=>props.NavigateMenu('blog')} style={{}}>{menu}</NavLink>; break;\r\n        case \"blog\": NavMenu =  <NavLink to={'/portfolio'} onClick={()=>props.NavigateMenu('portfolio')} style={{}}>{menu}</NavLink>; break;\r\n        default : return;\r\n    }\r\n\r\n    return (\r\n        <div className=\"navigation\">\r\n\r\n            <div className=\"mode-switch pt-2\">\r\n                <ThemeSwitch/>\r\n            </div>\r\n\r\n            <div className={style}>\r\n                <h3>Alvis Johnsen</h3>\r\n                <div className=\"text-right menu\">\r\n                    {NavMenu}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MapState = state =>{\r\n    return {\r\n        menu : state.Page.menu\r\n    }\r\n}\r\n\r\nconst MapDispatch = dispatch =>{\r\n    return {\r\n        NavigateMenu : (menu) => dispatch({type:\"MENU_NAVIGATE\", menu})\r\n    }\r\n}\r\n\r\nexport default connect(MapState,MapDispatch)(Navigation)\r\n","C:\\laragon\\www\\react\\fullstackblog\\src\\redux\\Store.js",[],"C:\\laragon\\www\\react\\fullstackblog\\src\\redux\\reducers\\PageLogics.js",[],"C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\PostPreviewCard.js",["80","81"],"import React,{useEffect} from 'react';\r\nimport '../../Styles/PostCard.css'\r\nimport {connect} from \"react-redux\";\r\nimport ImageGallery from 'react-image-gallery';\r\nimport PropTypes from 'prop-types'\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst PostCardPreview = ({theme,post}) => {\r\n\r\n    useEffect(()=>{\r\n        // console.log(post)\r\n    },[])\r\n\r\n    const classes = `card ${theme}`;\r\n    const images = [\r\n        {\r\n            original: 'https://picsum.photos/id/1018/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1018/250/150/',\r\n        },\r\n        {\r\n            original: 'https://picsum.photos/id/1015/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1015/250/150/',\r\n        },\r\n        {\r\n            original: 'https://picsum.photos/id/1019/1000/600/',\r\n            thumbnail: 'https://picsum.photos/id/1019/250/150/',\r\n        },\r\n    ];\r\n\r\n    return (\r\n            <div className={classes}>\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">{post.title}</h4>\r\n                    <p className=\"card-text\">{post.body.substring(0, 500)}...</p>\r\n                    <div className=\"post-media\">\r\n                        {/*<ImageGallery items={images} />*/}\r\n                    </div>\r\n                        <NavLink to={`/blog/${post.id}`} className=\"card-link\">Continue reading...</NavLink>\r\n                    <hr/>\r\n                    <div>\r\n                        <img src={\"view.svg\"} alt=\"views\" width={25}/> <span>{post.id * Math.floor(Math.random() * (10 - 1) ) + 1}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nPostCardPreview.propTypes = {\r\n    theme: PropTypes.string,\r\n    // post: PropTypes.object,\r\n    // FetchPosts: PropTypes.func,\r\n}\r\n\r\nconst MapDispatch = dispatch =>{\r\n    return {\r\n        //FetchPosts : () => dispatch(Actions.FetchPosts()),\r\n    }\r\n}\r\n\r\nexport default connect(null, MapDispatch)(PostCardPreview);\r\n","C:\\laragon\\www\\react\\fullstackblog\\src\\redux\\actions\\PostActions.js",[],"C:\\laragon\\www\\react\\fullstackblog\\src\\components\\ThemeSwitch.js",[],"C:\\laragon\\www\\react\\fullstackblog\\src\\redux\\reducers\\PostsReducer.js",[],"C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\Posts.js",["82"],"import React from 'react'\r\nimport PostCardPreview from \"./PostPreviewCard\";\r\nimport PostCard from \"./PostCard\";\r\n\r\nconst Posts = ({ posts }) =>{\r\n\r\n    return (\r\n        <div>\r\n            { posts && posts.map((post,index)=> <PostCard type={'preview'} post={post} key={index}/> )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Posts;\r\n","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\Blog.js",["83","84"],"import React, {useEffect} from 'react';\r\nimport Navigation from \"./Navigation\";\r\nimport Posts from \"./posts/Posts\";\r\nimport * as PostActions from \"../redux/actions/PostActions\";\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst Blog = (props) =>{\r\n\r\n    useEffect(()=>{\r\n        setTimeout(props.FetchPosts,200)\r\n    },[])\r\n    const theme = props.Page.darkMode ? 'dark' : 'light';\r\n    return (\r\n            <div className=\"container page\">\r\n                <Posts posts={props.StaticPosts} theme={theme}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst MapState = state =>{\r\n    return {\r\n        Page : state.Page,\r\n        Posts : state.PostReducer.posts,\r\n        StaticPosts : state.PostReducer.temporary //Array of static posts. Used in lieu of a DB #Temporary\r\n    }\r\n}\r\n\r\nconst MapDispatch = dispatch =>{\r\n    return {\r\n        FetchPosts : () => dispatch(PostActions.FetchPosts()),\r\n    }\r\n}\r\n\r\nexport default connect(MapState,MapDispatch)(withRouter(Blog));\r\n","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\Portfolio.js",[],"C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\Post.js",["85"],"import React, {useEffect} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport '../../Styles/PostCard.css';\r\nimport * as PostActions from '../../redux/actions/PostActions';\r\nimport {connect} from \"react-redux\";\r\n// import ImageGallery from \"react-image-gallery\";\r\nimport PostCard from \"./PostCard\";\r\n\r\nconst Post = (props) =>{\r\n    const postId = parseInt(props.match.params.id);\r\n    useEffect(()=>{\r\n        props.FetchPost(postId)\r\n    },[])\r\n\r\n    //select post to view from array of static posts\r\n    let tempPost =  props.StaticPosts.filter((post)=>post.id === postId);\r\n\r\n    return (\r\n       <div className={\"container\"}>\r\n\r\n           <button className=\"m-2 btn btn-secondary\" onClick={props.history.goBack}>Go back</button>\r\n           {\r\n               props.Post ? <PostCard type={'view'} post={tempPost[0]}/> : <p>loading...</p>\r\n           }\r\n       </div>\r\n    )\r\n}\r\n\r\nconst MapState = state => {\r\n    return {\r\n        Post : state.PostReducer.post, //post to read\r\n        Theme : state.Page.darkMode,\r\n        StaticPosts : state.PostReducer.temporary //Array of static posts. Used in lieu of a DB #Temporary\r\n    }\r\n}\r\n\r\nconst MapDispatch = dispatch =>{\r\n    return {\r\n        FetchPost : (id) => dispatch(PostActions.FetchPost(id))\r\n    }\r\n}\r\n\r\nexport default connect(MapState, MapDispatch)(withRouter(Post));\r\n","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\PostCard.js",["86"],"import React from 'react';\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport './../../Styles/PostCard.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport Comments from \"./Comments\";\r\nimport * as PostActions from \"../../redux/actions/PostActions\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PostCard = (props) =>{\r\n    // console.log(props.post)\r\n    let card;\r\n    const theme = localStorage.getItem('theme')//props.darkMode ? 'dark' : 'light';\r\n    const classes = `card ${theme}`\r\n\r\n    let images = props.post.hasImage ? <ImageGallery items={props.post.images} showPlayButton={false} showFullscreenButton={false}/> : null;\r\n\r\n    if (props.type === 'preview'){\r\n      card = (\r\n          <div className={classes}>\r\n              <div className=\"card-body\">\r\n                  <small>{props.post.date}</small>\r\n                  <h4 className=\"card-title\">{props.post.title}</h4>\r\n                  <p className=\"card-text\">{props.post.preview.substring(0, 200)}...</p>\r\n                  <NavLink to={`/blog/${props.post.id}`} className=\"card-link\">Continue reading...</NavLink>\r\n                  <div className=\"post-media mt-2\">  {images} </div>\r\n                  <hr/>\r\n\r\n                  <div>\r\n                      <img src={\"view.svg\"} alt=\"views\" width={25}/> <span>{props.post.views}</span>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      )\r\n    }\r\n    else {\r\n        card = (\r\n            <div className={\"container\"}>\r\n                <div className={classes}>\r\n                    <div className=\"card-body\">\r\n                        <small>{props.post.date}</small>\r\n                        {/*<small>Norway</small>*/}\r\n                        <h4 className=\"card-title\">{props.post.title}</h4>\r\n                        <p className=\"card-text\">{props.post.body}</p>\r\n                        <div className=\"post-media mt-2\">  {images} </div>\r\n                        <hr/>\r\n                        <div>\r\n                            <img src={\"/view.svg\"} alt=\"views\" width={25}/> <span>{props.post.views}</span>\r\n                        </div>\r\n                        {/*\r\n                            <h6 className=\"text-muted\">Comments</h6>\r\n                            <Comments writtenComment={props.PostStore.writtenComment} onChangeHandler={e=>props.commentWrite(e)}/>\r\n                        */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    return card\r\n}\r\n\r\n\r\nPostCard.propTypes = {\r\n    post : PropTypes.object\r\n}\r\n\r\nconst MapState = state =>{\r\n    return {\r\n       darkMode : state.Page.darkMode,\r\n       PostStore : state.PostReducer\r\n    }\r\n}\r\n\r\nconst MapDispatch = dispatch =>{\r\n    return {\r\n        commentWrite : (event) => dispatch(PostActions.CommentInputHandler(event.target.value))\r\n    }\r\n}\r\n\r\nexport default connect(MapState,MapDispatch)(PostCard);\r\n","C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\Comments.js",[],"C:\\laragon\\www\\react\\fullstackblog\\src\\components\\posts\\Comment.js",[],"C:\\laragon\\www\\react\\fullstackblog\\src\\redux\\reducers\\TemporaryBlogPosts.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":15,"nodeType":"93","messageId":"94","endLine":1,"endColumn":24},{"ruleId":"91","severity":1,"message":"95","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":20},{"ruleId":"91","severity":1,"message":"96","line":16,"column":11,"nodeType":"93","messageId":"94","endLine":16,"endColumn":17},{"ruleId":"91","severity":1,"message":"97","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":23},{"ruleId":"91","severity":1,"message":"98","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":12,"column":7,"nodeType":"101","endLine":12,"endColumn":9,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":13,"column":7,"nodeType":"101","endLine":13,"endColumn":9,"suggestions":"104"},{"ruleId":"91","severity":1,"message":"105","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":16},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ImageGallery' is defined but never used.","'images' is assigned a value but never used.","'PostCardPreview' is defined but never used.","'Navigation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.FetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has missing dependencies: 'postId' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["109"],"'Comments' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [props.FetchPosts]",{"range":"114","text":"115"},"Update the dependencies array to be: [postId, props]",{"range":"116","text":"117"},[364,366],"[props.FetchPosts]",[455,457],"[postId, props]"]